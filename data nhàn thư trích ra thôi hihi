drop database cuctac1;
create database cuctac1;
use cuctac1;

CREATE TABLE IF NOT EXISTS BRANCHES (
    branch_id VARCHAR(4) PRIMARY KEY, -- VD: HN, HCM
    branch_name VARCHAR(100),
    branch_address VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS CUSTOMERS (
    cus_ID VARCHAR(18) PRIMARY KEY, -- DTNB[branch_id][2-digit year][[7-digit index]
    cus_first_name VARCHAR(50),
    cus_last_name VARCHAR(50),
    cus_dob DATE, -- added
    cus_email VARCHAR(50) UNIQUE, -- added 
    cus_address VARCHAR(100) , 
    cus_phone_num VARCHAR(15) UNIQUE, -- + [Mã quốc gia][Số còn lại] VD: +84 901238881
    cus_sex ENUM('Male', 'Female'),
    cus_identification_id VARCHAR(20) UNIQUE,
    branch_id VARCHAR(4),
    FOREIGN KEY (branch_id) REFERENCES BRANCHES(branch_id) ON DELETE CASCADE
);
CREATE TABLE CUSTOMERS_INDEX (
    branch_id VARCHAR(4),
    year CHAR(2),
    current_index INT,
    PRIMARY KEY (branch_id, year)
);

###################################################################################################
DELIMITER $$
CREATE TRIGGER trg_generate_customer_id
BEFORE INSERT ON CUSTOMERS
FOR EACH ROW
BEGIN
    DECLARE idx INT;
    DECLARE yy CHAR(2);
    SET yy = DATE_FORMAT(CURRENT_DATE, '%y'); -- Lấy 2 số cuối năm hiện tại

    -- Tăng chỉ số cho branch + year hoặc thêm mới
    INSERT INTO CUSTOMERS_INDEX(branch_id, year, current_index)
    VALUES (NEW.branch_id, yy, 1)
    ON DUPLICATE KEY UPDATE current_index = current_index + 1;

    -- Lấy chỉ số mới sau khi cập nhật
    SELECT current_index INTO idx
    FROM CUSTOMERS_INDEX
    WHERE branch_id = NEW.branch_id AND year = yy;

    -- Tạo customer_ID
    SET NEW.cus_ID = CONCAT('DTNB', NEW.branch_id, yy, LPAD(idx, 7, '0'));
END$$

DELIMITER ;
#########################################################################################################
CREATE TABLE IF NOT EXISTS CUSTOMER_ACCOUNT_TYPES (
    cus_account_type_id VARCHAR(2) PRIMARY KEY,
    cus_account_type_name VARCHAR(20) NOT NULL UNIQUE
);
CREATE TABLE IF NOT EXISTS CUSTOMER_ACCOUNTS (
    cus_account_id VARCHAR(17) primary key, -- DTNB[customer_account_type_id][2-digit year][7-digit index]
    cus_id VARCHAR(17),
    cus_account_status ENUM('Active', 'Temporary Locked', 'Locked') DEFAULT 'Active', 
    opening_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    cus_account_type_id VARCHAR(2) ,
    
    FOREIGN KEY (cus_id) REFERENCES CUSTOMERS(cus_id) on delete cascade,
    FOREIGN KEY (cus_account_type_id) REFERENCES CUSTOMER_ACCOUNT_TYPES(cus_account_type_id) on delete set null
);
CREATE TABLE IF NOT EXISTS CUSTOMER_ACCOUNT_INDEX (
    cus_account_type_id VARCHAR(2),
    year CHAR(2),
    current_index INT DEFAULT 0,
    PRIMARY KEY (cus_account_type_id, year)
);

######################################################################################################################
DELIMITER $$
CREATE TRIGGER trg_generate_customer_account_id
BEFORE INSERT ON CUSTOMER_ACCOUNTS
FOR EACH ROW
BEGIN
    DECLARE idx INT;
    DECLARE yy CHAR(2);
    SET yy = DATE_FORMAT(CURRENT_DATE, '%y'); -- Lấy 2 số cuối năm hiện tại

    INSERT INTO CUSTOMER_ACCOUNT_INDEX(cus_account_type_id, year, current_index)
    VALUES (NEW.cus_account_type_id, yy, 1)
    ON DUPLICATE KEY UPDATE current_index = current_index + 1;

    -- Lấy chỉ số mới sau khi cập nhật
    SELECT current_index INTO idx
    FROM CUSTOMER_ACCOUNT_INDEX
    WHERE cus_account_type_id = NEW.cus_account_type_id AND year = yy;

    -- Tạo customer_ID
    SET NEW.cus_account_id = CONCAT('DTNB', NEW.cus_account_type_id, yy, LPAD(idx, 7, '0'));
END$$

DELIMITER ;
###############################################################################################################################
-- Thêm dữ liệu vào bảng BRANCHES
INSERT INTO BRANCHES (branch_id, branch_name, branch_address) VALUES
('HN', 'Hà Nội', '123 Đường Láng, Đống Đa, Hà Nội'),
('HCM', 'Hồ Chí Minh', '456 Lê Lợi, Quận 1, TP.HCM'),
('DN', 'Đà Nẵng', '789 Nguyễn Văn Linh, Hải Châu, Đà Nẵng');

-- Thêm dữ liệu vào bảng CUSTOMER_ACCOUNT_TYPES
INSERT INTO CUSTOMER_ACCOUNT_TYPES (cus_account_type_id, cus_account_type_name) VALUES
('ST', 'Tiết kiệm'),
('CR', 'Tín dụng'),
('CK', 'Thanh toán');

-- Thêm dữ liệu khách hàng (CUSTOMERS)
-- Lưu ý: branch_id phải tồn tại trong bảng BRANCHES
INSERT INTO CUSTOMERS (cus_first_name, cus_last_name, cus_dob, cus_email, cus_address, cus_phone_num, cus_sex, cus_identification_id, branch_id) VALUES
('Nguyễn Văn', 'A', '1990-05-15', 'nguyenvana@email.com', '111 Đường X, Hà Nội', '+84 987654321', 'Male', '123456789012', 'HN'),
('Trần Thị', 'B', '1985-08-20', 'tranthib@email.com', '222 Đường Y, TP.HCM', '+84 912345678', 'Female', '234567890123', 'HCM'),
('Lê Văn', 'C', '1995-03-10', 'levanc@email.com', '333 Đường Z, Đà Nẵng', '+84 923456789', 'Male', '345678901234', 'DN');
select * from CUSTOMERS;


-- Tài khoản cho khách hàng DTNBHN250000001 (Hà Nội)
INSERT INTO CUSTOMER_ACCOUNTS (cus_id, cus_account_status, cus_account_type_id) VALUES
('DTNBHN250000001', 'Active', 'ST'), -- Tài khoản tiết kiệm
('DTNBHN250000001', 'Active', 'CK'); -- Tài khoản thanh toán

-- Tài khoản cho khách hàng DTNBHCN250000001 (Hồ Chí Minh)
INSERT INTO CUSTOMER_ACCOUNTS (cus_id, cus_account_status, cus_account_type_id) VALUES
('DTNBHCM250000001', 'Active', 'CR'), -- Tài khoản tín dụng
('DTNBHCM250000001', 'Active', 'CK'); -- Tài khoản thanh toán

-- Tài khoản cho khách hàng DTNBDN250000001 (Đà Nẵng)
INSERT INTO CUSTOMER_ACCOUNTS (cus_id, cus_account_status, cus_account_type_id) VALUES
('DTNBDN250000001', 'Active', 'ST'), -- Tài khoản tiết kiệm
('DTNBDN250000001', 'Temporary Locked', 'CK'); -- Tài khoản thanh toán bị tạm khóa

select * FROM CUSTOMER_ACCOUNTS;

CREATE TABLE IF NOT EXISTS EMPLOYEE_POSITIONS( -- TẠO BẢNG EMPLOYEE_POSITIONS
	emp_position_id VARCHAR(2) primary KEY, -- 'T', 'M', etc
    emp_position_name VARCHAR(15),
    description TEXT
);
CREATE TABLE IF NOT EXISTS EMPLOYEES (
    emp_id VARCHAR(11) PRIMARY KEY, -- [branch_id][position_id][2-digit year][4-digit index]
    emp_fullname VARCHAR(100) NOT NULL,
    emp_sex ENUM('Male', 'Female') NOT NULL,
    emp_dob DATE NOT NULL,
    emp_phone_num VARCHAR(15) UNIQUE NOT NULL, -- + [Mã quốc gia][Số còn lại] VD: +84 901238881
    emp_email VARCHAR(50) UNIQUE NOT NULL,
    emp_address VARCHAR(255) NOT NULL,
    emp_hire_date DATE NOT NULL,
    emp_salary INT(9) UNSIGNED NOT NULL,
    branch_id VARCHAR(4),
    emp_position_id VARCHAR(2),
    
    FOREIGN KEY (branch_id) REFERENCES BRANCHES(branch_id) ON DELETE CASCADE,
    FOREIGN KEY (emp_position_id) REFERENCES EMPLOYEE_POSITIONS(emp_position_id) ON DELETE SET NULL
);
-- Sửa cấu trúc bảng
ALTER TABLE EMPLOYEES MODIFY emp_id VARCHAR(16);
CREATE TABLE IF NOT EXISTS EMPLOYEE_ACCOUNT_INDEX (
	emp_position_id VARCHAR(2),
    branch_id VARCHAR(4),
    year CHAR(2),
    current_index INT DEFAULT 0,
    PRIMARY KEY (emp_position_id, branch_id, year)
);
drop trigger trg_generate_emp_id
##########################################################################################
DELIMITER $$
CREATE TRIGGER trg_generate_emp_id
BEFORE INSERT ON EMPLOYEES
FOR EACH ROW
BEGIN
    DECLARE idx INT;
    DECLARE yy CHAR(2);
    SET yy = DATE_FORMAT(CURRENT_DATE, '%y'); -- Lấy 2 số cuối năm hiện tại

    INSERT INTO EMPLOYEE_ACCOUNT_INDEX ( branch_id, emp_position_id, year, current_index)
    VALUES (NEW.branch_id, NEW.emp_position_id, yy, 1)
    ON DUPLICATE KEY UPDATE current_index = current_index + 1;

    -- Lấy chỉ số mới sau khi cập nhật
    SELECT current_index INTO idx
    FROM EMPLOYEE_ACCOUNT_INDEX
    WHERE branch_id = NEW.branch_id AND emp_position_id = NEW.emp_position_id AND year = yy;

    -- Tạo customer_ID
    SET NEW.emp_id = CONCAT(NEW.branch_id, NEW.emp_position_id,  yy, LPAD(idx, 4, '0'));
END$$

DELIMITER ;
###############################################################################################################################
INSERT INTO EMPLOYEE_POSITIONS (emp_position_id, emp_position_name, description) VALUES
('T', 'Teller', 'Nhân viên giao dịch tại quầy'),
('M', 'Manager', 'Quản lý chi nhánh'),
('A', 'Auditor', 'Kiểm toán viên'),
('D', 'Director', 'Giám đốc');
-- Nhân viên chi nhánh Hà Nội (HN)
INSERT INTO EMPLOYEES (emp_fullname, emp_sex, emp_dob, emp_phone_num, emp_email, emp_address, emp_hire_date, emp_salary, branch_id, emp_position_id) VALUES
('Nguyễn Văn ', 'Male', '1980-05-15', '+84 987654321', 'manager.hn@bank.com', '123 Đường Láng, Hà Nội', '2015-06-10', 25000000, 'HN', 'M'),
('Trần Thị', 'Female', '1990-08-20', '+84 912345678', 'teller1.hn@bank.com', '456 Đường Kim Mã, Hà Nội', '2018-03-15', 12000000, 'HN', 'T'),
('Lê Văn', 'Male', '1985-11-25', '+84 923456789', 'auditor.hn@bank.com', '789 Đường Giảng Võ, Hà Nội', '2016-09-20', 18000000, 'HN', 'A');

-- Nhân viên chi nhánh Hồ Chí Minh (HCM)
INSERT INTO EMPLOYEES (emp_fullname, emp_sex, emp_dob, emp_phone_num, emp_email, emp_address, emp_hire_date, emp_salary, branch_id, emp_position_id) VALUES
('Phạm Thị Quản Lý', 'Female', '1975-04-18', '+84 934567890', 'manager.hcm@bank.com', '321 Đường Lê Lợi, TP.HCM', '2014-07-22', 28000000, 'HCM', 'M'),
('Hoàng Văn Giao Dịch', 'Male', '1992-07-30', '+84 945678901', 'teller1.hcm@bank.com', '654 Đường Nguyễn Huệ, TP.HCM', '2019-05-10', 13000000, 'HCM', 'T'),
('Vũ Thị Kiểm Toán', 'Female', '1988-12-05', '+84 956789012', 'auditor.hcm@bank.com', '987 Đường Pasteur, TP.HCM', '2017-11-15', 19000000, 'HCM', 'A');

-- Nhân viên chi nhánh Đà Nẵng (DN)
INSERT INTO EMPLOYEES (emp_fullname, emp_sex, emp_dob, emp_phone_num, emp_email, emp_address, emp_hire_date, emp_salary, branch_id, emp_position_id) VALUES
('Đặng Văn Quản Lý', 'Male', '1978-09-12', '+84 967890123', 'manager.dn@bank.com', '159 Đường Hải Phòng, Đà Nẵng', '2016-02-28', 24000000, 'DN', 'M'),
('Mai Thị Giao Dịch', 'Female', '1993-03-22', '+84 978901234', 'teller1.dn@bank.com', '753 Đường Trần Phú, Đà Nẵng', '2020-01-05', 11000000, 'DN', 'T'),
('Trịnh Văn Giám đốc ', 'Male', '1982-06-08', '+84 989012345', 'director.dn@bank.com', '357 Đường Lê Duẩn, Đà Nẵng', '2018-08-12', 8000000, 'DN', 'D');

select * from EMPLOYEES;


CREATE TABLE TRANSACTION_TYPES(
    trans_type_id VARCHAR(3) PRIMARY KEY,
    trans_type_name VARCHAR(20) NOT NULL,
    description TEXT
);
CREATE TABLE TRANSACTION_ERROR_CODES (
    trans_error_code VARCHAR(10) PRIMARY KEY,
    trans_error_name VARCHAR(50) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    can_retry BOOLEAN DEFAULT FALSE,
    needs_human_review BOOLEAN DEFAULT FALSE
);
CREATE TABLE TRANSACTIONS (
    trans_id VARCHAR(18) PRIMARY KEY, --  DTNB[transactin_type_id][2-digit year][7-digit index][day]
    trans_type_id varchar(3),
    cus_account_id VARCHAR(17) ,
	related_cus_account_id VARCHAR(17) ,
    trans_amount INT NOT NULL
		CHECK (trans_amount >= 1000),
	direction ENUM('Debit', 'Credit') NOT NULL,
    trans_time DATETIME DEFAULT CURRENT_TIMESTAMP,
    last_updated DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    trans_status enum("Pending","Failed", "Successful") DEFAULT 'Pending',
	trans_error_code VARCHAR(10),
    
	FOREIGN KEY (trans_error_code) REFERENCES TRANSACTION_ERROR_CODES(trans_error_code) ON DELETE SET NULL,
	FOREIGN KEY (cus_account_id) REFERENCES CUSTOMER_ACCOUNTS(cus_account_id) ON DELETE SET NULL,
   	FOREIGN KEY (related_cus_account_id) REFERENCES CUSTOMER_ACCOUNTS(cus_account_id) ON DELETE SET NULL,
	FOREIGN KEY (trans_type_id) REFERENCES TRANSACTION_TYPES(trans_type_id) ON DELETE SET NULL
	)	;
CREATE TABLE IF NOT EXISTS TRANSACTION_INDEX (
    trans_type_id VARCHAR(3),
    year_suffix CHAR(2),
    current_index INT DEFAULT 0,
    PRIMARY KEY (trans_type_id, year_suffix)
);
###################################################################################################
drop trigger trg_generate_trans_id
DELIMITER $$
CREATE TRIGGER trg_generate_trans_id
BEFORE INSERT ON TRANSACTIONS
FOR EACH ROW
BEGIN
    DECLARE idx INT;
    DECLARE yy CHAR(2);
    SET yy = DATE_FORMAT(CURRENT_DATE, '%y'); -- Lấy 2 số cuối năm hiện tại

    -- Tăng chỉ số cho branch + year hoặc thêm mới
    INSERT INTO TRANSACTION_INDEX (trans_type_id, year_suffix, current_index)
    VALUES (NEW.trans_type_id, yy, 1)
    ON DUPLICATE KEY UPDATE current_index = current_index + 1;

    -- Lấy chỉ số mới sau khi cập nhật
    SELECT current_index INTO idx
    FROM TRANSACTION_INDEX
    WHERE trans_type_id= NEW.trans_type_id AND year_suffix = yy;

    -- Tạo customer_ID
    SET NEW.trans_id = CONCAT('DTNB', NEW.trans_type_id, yy, LPAD(idx, 7, '0'));
END$$

DELIMITER ;
#########################################################################################################
-- 1. Thêm dữ liệu loại giao dịch
INSERT INTO TRANSACTION_TYPES (trans_type_id, trans_type_name, description) VALUES
('CK', 'Chuyển khoản', 'Giao dịch chuyển tiền nội bộ ngân hàng'),
('CR', 'Chuyển tiền ra ngoài', 'Chuyển tiền sang ngân hàng khác'),
('TT', 'Thanh toán hóa đơn', 'Thanh toán dịch vụ điện nước');

-- 2. Thêm dữ liệu mã lỗi
INSERT INTO TRANSACTION_ERROR_CODES (trans_error_code, trans_error_name, description, is_active, can_retry, needs_human_review) VALUES
('LIMIT_EX', 'Vượt hạn mức', 'Số tiền vượt quá hạn mức giao dịch', TRUE, TRUE, FALSE),
('ACC_LOCK', 'Tài khoản khóa', 'Tài khoản đích đang bị khóa', TRUE, FALSE, TRUE);

-- 3. Thêm dữ liệu giao dịch (sử dụng customer account ID bạn cung cấp)
INSERT INTO TRANSACTIONS (trans_type_id, cus_account_id, related_cus_account_id, trans_amount, direction, trans_status, trans_error_code) VALUES
('CK', 'DTNBCK250000001', 'DTNBCR250000001', 5000000, 'Debit', 'Failed', 'LIMIT_EX'),
('TT', 'DTNBCK250000001', NULL, 1500000, 'Debit', 'Successful', NULL),
('CK', 'DTNBCR250000001', 'DTNBCK250000001', 2000000, 'Debit', 'Pending', NULL),
('CR', 'DTNBST250000001', 'DTNBCK250000001', 10000000, 'Debit', 'Failed', 'ACC_LOCK'),
('CK', 'DTNBCR250000001', 'DTNBST250000001', 3000000, 'Credit', 'Successful', NULL);
select * from TRANSACTIONS;

SELECT cus_account_id FROM CUSTOMER_ACCOUNTS;

